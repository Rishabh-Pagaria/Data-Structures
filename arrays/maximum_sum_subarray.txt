Problem: Find the maximum some of the subarray
This is a brute force technique
Time Complexity : O(N3)

Code : 
#include <iostream>
#include <climits>
using namespace std;

int main(){
    int n;
    cin>>n;
    int a[n];
    for(int i=0;i<n;i++){
        cin>>a[i];
    }
    int maxSub = INT_MIN;  
    for(int i = 0; i < n; i++){
        for(int j = i; j < n; j++){
            int sum = 0;
            for(int k = i; k <= j; k++){
                sum += a[k];
            }
            maxSub = max(maxSub, sum);
            
        }
    }
    cout<<maxSub;
    return 0;
}
*******************************************************************************************************
Optimzed approach: O(N)
Using Kadane's algorithm

Code: 
#include <iostream>
#include <climits>
using namespace std;

int main(){
    int n;
    cin>>n;
    int a[n];
    for(int i=0;i<n;i++){
        cin>>a[i];
    }
    int maxSum = INT_MIN;  
    int currSum = 0;
    for(int i = 0; i < n; i++){
        currSum += a[i];
        if(currSum < 0){
            currSum = 0;
        }
        maxSub = max(maxSub, currSum);
    }
    cout<<"The maximum sum is: "<<maxSub<<endl;
    return 0;
}


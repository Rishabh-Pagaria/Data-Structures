Problem
Given an array arr[] of size N. The task is to find the first repeating element in an
array of integers, i.e., an element that occurs more than once and whose index of
first occurrence is smallest.

Input:
7
1 5 3 4 3 5 6
Output:
2
Explanation:
5 is appearing twice and its first appearance is at index 2 which is less than 3
whose first occurring index is 3.

Idea : To check if an element is repeating, we maintain an array idx[], which
stores the first occurrence (index) of a particular element a[i].

Steps : 
* Initialise the idx[] with -1, and minidx with INT_MAX.
    [-1,-1,-1,-1,-1,-1,-1]
* Keep updating idx[], while traversing the given array.
    [1, 5, 3, 4, 3, 5, 6]

******************************************************************************************************
Code : 
#include <iostream>
#include <climits>
using namespace std;

int main()
{
    int n;
    cin >>n;
    int a[n];
    for(int i = 0; i<n;i++){
        cin>>a[i];
    }
    // The N will be the constant value throughout the program, you can't change it
    const int N = 1e6 + 2; // (1 * 10^6) + 2
    int idx[N];
    for(int i = 0; i < N; i++){
        idx[i] = -1;
    }
    int minIdx = INT_MAX;
    for(int i = 0; i < n; i++){
        if(idx[a[i]] != -1){
            minIdx = min(minIdx, idx[a[i]]);
        }
        else{
            idx[a[i]] = i;
        }
    }
    if(minIdx == INT_MAX){
        cout<<"-1"<<endl;
    }else{
        cout<<minIdx+1;
    }
    // if(doubt){
    //     int seeTheVideo = "https://youtu.be/kJW_iXrwePE?t=414";
    //     int docLink = "https://drive.google.com/drive/folders/1AeAex8bq4KTGBi5iaiX5cu4LWh7gDtZl";
    // }
    return 0;
}
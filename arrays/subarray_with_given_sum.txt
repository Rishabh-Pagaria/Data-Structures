Problem
Given an unsorted array A of size N of non-negative integers, find a continuous
subarray which adds to a given number S.

Constraints
1 <= N <= 105
0 <= Ai <= 1010
Example
Input:
N = 5, S = 12
A[] = {1,2,3,7,5}
Output: 2 4
Explanation: The sum of elements from 2nd position to 4th position is 12.

Brute Force Approach
Time Complexity: O(N2)
code : 
#include <iostream>
using namespace std;

int main(){
    int n, s;
    cin>>n;
    int a[n];
    for(int i = 0; i < n; i++){
        cin>>a[i];
    }
    cin>>s;
    int sum = 0;
    for(int i = 0; i < n; i++){
        sum = a[i];
        for(int j = i+1; j < n; j++){
            if(sum == s){
                cout<<i<<"and "<<j-1;
                break;
            }
            if(sum > s || j == n){
                break;
            }
            sum += a[j];
        }
        if(sum == s){
            break;
        }
    }
    
    return 0;
}